name: Build and deploy
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build api image
        run: |
          cd todolist
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.API_NAME }}:$GITHUB_REF_NAME-$GITHUB_RUN_ID -f Dockerfile .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: push image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.API_NAME }}:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-22.04
    needs: build_and_push
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      API_NAME: ${{ secrets.API_NAME }}
      DOCKER_FRONT_PROVIDER_USERNAME: ${{ secrets.DOCKER_FRONT_PROVIDER_USERNAME }}
      DOCKER_FRONT_IMAGE_NAME: ${{ secrets.DOCKER_FRONT_IMAGE_NAME }}
      DOCKER_FRONT_IMAGE_TAG: ${{ secrets.DOCKER_FRONT_IMAGE_TAG }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_CONTAINER_PORT: ${{ secrets.DB_CONTAINER_PORT }}
      DB_HOST_PORT: ${{ secrets.DB_HOST_PORT }}
      DEBUG: ${{ secrets.DEBUG }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: render configs
        run: |
          cd deploy
          cat docker-compose-ci.yaml | envsubst > docker-compose.yaml
          cat ci.env | envsubst > .env
      - name: copy file via ssh-session
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: "deploy/docker-compose.yaml, deploy/.env"
          target: "todolist_code"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd todolist_code
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker compose down --rmi all --volumes
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker system prune --all -v -f
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker compose up -d
